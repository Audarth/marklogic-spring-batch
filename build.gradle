buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE")
    }
}

plugins {
  id "com.marklogic.ml-gradle" version "2.0rc5" 
  id "java"
  id "eclipse"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  jcenter()
  maven { url "http://repo.spring.io/milestone" }
  maven { url "http://developer.marklogic.com/maven2/" }
}


dependencies {
  compile "org.springframework.batch:spring-batch-core:3.0.6.RELEASE"
  compile "org.springframework.batch:spring-batch-test:3.0.6.RELEASE"
  compile "org.springframework.batch:spring-batch-samples:2.2.7.RELEASE"
  
  compile "org.springframework:spring-core:4.2.0.RC3"

  compile "com.marklogic:java-client-api:3.0.3"
  compile "com.marklogic:ml-javaclient-util:2.5"
  
  testCompile "junit:junit"
  testCompile "com.marklogic:ml-junit:2.5"

  testCompile "com.jayway.restassured:rest-assured:2.3.1"
  testCompile "org.springframework.batch:spring-batch-test"
  
  // For testing SQL readers
  testCompile "org.springframework:spring-jdbc:4.2.0.RC3"
  testCompile "org.hsqldb:hsqldb:2.3.3"
  
  // For tests that write objects as XML
  testCompile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.3"
  testRuntime "org.codehaus.woodstox:woodstox-core-asl:4.4.1"
}

sourceSets.test.resources.srcDir 'src/test/java'
